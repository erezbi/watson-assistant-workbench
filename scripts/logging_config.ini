[loggers]
keys=root,common

[handlers]
keys=defaultFileHandler,defaultConsoleHandler

[formatters]
keys=form

[logger_root]
level=INFO
handlers=defaultFileHandler,defaultConsoleHandler

# common logger for all the scripts
[logger_common]
handlers=
qualname=common

[handler_defaultFileHandler]
class=FileHandler
level=DEBUG
formatter=form
args=('log.log',)

[handler_defaultConsoleHandler]
class=StreamHandler
level=DEBUG
formatter=form
args=()

[formatter_form]
format=%(asctime)s %(filename)-27s %(levelname)-8s %(message)s
datefmt=%Y-%m-%d %H:%M:%S

# To create custom logger for a single script:
# 1) Create a logger with any name you want, but preferably according to the script name (e.g. 'cfgCommons'), create custom handlers
# 2) Set-up the logger:
#       -[logger_(SCRIPT_NAME)]
#       -qualname=common.(SCRIPT NAME) - must be set according to the script name without '.py' suffix,
#                                       note the 'common' prefix which is needed to be able to use the root logger
#                                       even without creating a logger for each script.
#       -handlers=(CUSTOM HANDLERS) - add any handlers you want to use for the logger
# 3) Add the loggers name to the [loggers] keys and the custom handlers to the [handlers] keys
#
#
# EXAMPLE:
# A logger that logs separately all the errors from cfgCommons.py to a file called 'customLog.log'
#
# [loggers]
# keys=root,common,cfgCommons,...
#
# [handlers]
# keys=customHandler,...
#
# [formatters]
# keys=form
#
# [logger_cfgCommons]
# qualname=common.cfgCommons
# handlers=customFileHandler
#
# [handler_customFileHandler]
# class=FileHandler
# formatter=form
# level=ERROR
# args=('customLog.log',)
